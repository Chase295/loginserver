version: '3.8'

services:
  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./src/frontend:/app
      - /app/node_modules
    depends_on:
      - backend

  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/watchlist
      - JWT_SECRET=your_jwt_secret_key
      - TMDB_API_KEY=baef77dbebea87e3a224ad917d2d5682
      - TMDB_ACCESS_TOKEN=eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiYWVmNzdkYmViZWE4N2UzYTIyNGFkOTE3ZDJkNTY4MiIsIm5iZiI6MTc0NjY0MDcyNS4wMjMsInN1YiI6IjY4MWI5ZjU1ZTU1MWI4OTBlNGRmOTUwOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.giM7pBG4eQbCUZPgiSdVF-FAmvv5FLPCVfzrSBoN1zY
    volumes:
      - ./src/backend:/app
      - /app/node_modules
    depends_on:
      - db

  testapi:
    build:
      context: ./src/testapi
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - BACKEND_URL=http://backend:8000
      - JWT_SECRET=your_jwt_secret_key
      - TEST_USERNAME=testuser
      - TEST_PASSWORD=password123
      - TEST_EMAIL=test@example.com
    depends_on:
      - backend

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=watchlist
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
